{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template: Create a PIWIK stack using a single EC2 Ubuntu instance and an Amazon RDS database instance for the backend data store. ",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "DBName": {
      "Default": "piwikdb",
      "Description" : "MySQL database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBUsername": {
      "NoEcho": "false",
      "Default": "piwikadmin",
      "Description" : "Username for MySQL database access",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Default": "p1w1kc0nn",
      "Description" : "Password for MySQL database access",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "DBAllocatedStorage": {
      "Default": "10",
      "Description" : "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "1024",
      "ConstraintDescription" : "must be between 5 and 1024Gb."
    },

    "DBInstanceClass": {
      "Default": "db.t2.micro",
      "Description" : "The database instance type",
      "Type": "String",
      "AllowedValues" : [ "db.t2.micro", "db.t2.small", "db.m1.small", "db.m1.medium"  ],
      "ConstraintDescription" : "must select a valid database instance type."
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t2.micro","t2.small","m1.medium"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.small"    : { "Arch" : "HVM64" },
      "m1.medium"   : { "Arch" : "HVM64" }

    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "HVM64" : "ami-fce3c696"  },
        "ap-southeast-2" : { "64" : "ami-6c14310f", "HVM64" : "ami-6c14310f" }

  }
},

  "Resources" : {

    "WebServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "Comment1" : "Configure the bootstrap helpers to install the Apache Web Server and PHP",
        "Comment2" : "The website content is downloaded from the CloudFormationPHPSample.zip file",

        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "InstallAndRun" : [ "Install", "Configure" ]
          },
		  
		  "Install" : {
		    "packages" : {
              "apt" : {
                "apache2"   : []
               
              }
			},
			
			"services" : {
              "sysvinit" : {
                "apache2" : { "enabled" : "true", "ensureRunning" : "true" },
                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true"}
              }
             }
			},
	"Configure" : {
             "commands" : {
              "01" : {
                "command" : "echo 'REPLACE_WITH_DBHOSTNAME' > /bin/MySQL_DB_Hostname\n"
                },
              "02" : {
	"command" : { "Fn::Join" : ["", ["sed -i \"s/REPLACE_WITH_DBHOSTNAME/", {"Fn::GetAtt" : ["MySQLDatabase", "Endpoint.Address"] }, "/g\" /bin/MySQL_DB_Hostname\n"]]}
		}
            }
           }
          }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
                "UserData": { "Fn::Base64" : {"Fn::Join": ["", [
            "#!/bin/bash -xe\n",
            "apt-get update\n",
            "apt-get -y install python-pip\n",
	    "pip install 'requests[security]'\n",
            "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
            "cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup \n",
            "chmod +x /etc/init.d/cfn-hup \n",
            "update-rc.d cfn-hup defaults \n ",
            "service cfn-hup start \n",
            "cfn-init -v ", " --stack ", {"Ref": "AWS::StackName" }, " --resource WebServer ", " --configsets InstallAndRun ", " --region ", { "Ref": "AWS::Region" }, "\n",
			
			"#Install Packages\n",
			"apt-get install -y mysql-client php5 libapache2-mod-php5 php5-mysql php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl php5-xcache unzip curl\n",
			
			"#Download Configuration file templates\n",
			"wget -P /root/Piwik_Config_files/ https://s3-ap-southeast-2.amazonaws.com/piwik-jithu/Piwik-Conf-Files/piwik_db_dump.sql\n",
			"wget -P /root/Piwik_Config_files/ https://s3-ap-southeast-2.amazonaws.com/piwik-jithu/Piwik-Conf-Files/index.php.REPLACE\n",
			"wget -P /root/Piwik_Config_files/ https://s3-ap-southeast-2.amazonaws.com/piwik-jithu/Piwik-Conf-Files/config.ini.php.REPLACE\n",
			"wget -P /etc/init.d/ https://s3-ap-southeast-2.amazonaws.com/piwik-jithu/Piwik-Conf-Files/piwik_configure\n",
			
			"#Set script to run on startup\n",
			"chmod 0755 /etc/init.d/piwik_configure\n",
			"update-rc.d piwik_configure defaults\n",
			
			"#Install Piwik\n",

			"wget -P /var/www/html/ http://builds.piwik.org/latest.zip\n",
			"cd /var/www/html\n",
			"unzip /var/www/html/latest.zip\n",

			"# Copy the config files to right locations\n",
			"cp -p /root/Piwik_Config_files/config.ini.php.REPLACE /var/www/html/piwik/config/config.ini.php\n",
			"cp -p /root/Piwik_Config_files/index.php.REPLACE /var/www/html/index.php\n",
			
			"#Variables\n",
			"PUBDNS=`curl http://169.254.169.254/latest/meta-data/public-hostname 2>/dev/null`\n",
			
			"#Substitute values in config files\n",
			"sed -i \"s/REPLACE_WITH_PUBDNS/$PUBDNS/g\"  /var/www/html/piwik/config/config.ini.php\n",
			"sed -i \"s/REPLACE_WITH_DBHOST/", {"Fn::GetAtt" : ["MySQLDatabase", "Endpoint.Address"] }, "/g\" /var/www/html/piwik/config/config.ini.php\n",
			"sed -i \"s/REPLACE_WITH_PUBDNS/$PUBDNS/g\"  /var/www/html/index.php\n",
			"sed -i \"s/REPLACE_WITH_DBHOST/", {"Fn::GetAtt" : ["MySQLDatabase", "Endpoint.Address"] }, "/g\" /var/www/html/index.php\n",
			
			"# Set Permissions\n",
			"chown -R www-data:www-data /var/www/html\n",	
			"chmod -R 0755 /var/www/html/piwik/tmp\n",
			
	
            "cfn-signal -e $? ", "  --stack ", { "Ref": "AWS::StackName" }, " --resource WebServer ", " --region ", { "Ref": "AWS::Region" }, "\n"
        ]]  }}
		},
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT5M"
        }
      }		
	},

    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
                  {"IpProtocol" : "tcp", "FromPort" : "3306", "ToPort" : "3306", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    },

    "DBSecurityGroup": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "Grant database access to web server",
        "DBSecurityGroupIngress": {
          "EC2SecurityGroupName": { "Ref": "WebServerSecurityGroup" }
        }
      }
    },

    "MySQLDatabase": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine" : "MySQL",
        "DBName" : { "Ref": "DBName" },
        "MultiAZ" : "false",
        "MasterUsername": { "Ref": "DBUsername" },
        "MasterUserPassword": { "Ref" : "DBPassword" },
        "DBInstanceClass": { "Ref" : "DBInstanceClass" },
        "DBSecurityGroups": [ { "Ref": "DBSecurityGroup" } ],
        "AllocatedStorage": { "Ref" : "DBAllocatedStorage" }
      }
    }
  },

  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]}]] },
      "Description" : "URL for newly created LAMP stack"
    }
  }
}


